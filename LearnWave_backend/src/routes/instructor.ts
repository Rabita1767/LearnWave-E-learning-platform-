import express from "express";
import multer from "multer";
import instructorController from "../controllers/instructorController";
import auth from "../middlewares/auth";
import validate from "../middlewares/express_validator";
import { uploadFile } from "../util/multer_config";
const routes = express();
const storage = multer.memoryStorage();
const upload = multer({ storage: storage });
routes.post("/auth", validate.signUp, instructorController.auth);
routes.post("/verifyMail", instructorController.verifyMail);
routes.post("/login", validate.login, instructorController.login);
// routes.post("/addCourse", auth.auth, auth.isInstructor, validate.addCourse, uploadFile.single('image'), instructorController.addCourse);
routes.post("/addCourse", auth.auth, validate.addCourse, uploadFile.single('image'), instructorController.addCourse);
routes.post("/addSection", auth.auth, auth.isInstructor, validate.addSection, instructorController.addSection);
routes.post("/sendCourseAddrequest", auth.auth, auth.isInstructor, instructorController.sendCourseAddrequest);
routes.get("/getCourseNotification", auth.auth, auth.isInstructor, instructorController.getCourseNotification);
routes.post("/uploadVideo", auth.auth, validate.uploadVideo, upload.single("file"), instructorController.uploadVideo);
routes.post("/getVideo", instructorController.getVideo);
routes.post("/addAssignment", auth.auth, auth.isInstructor, validate.addAssignment, instructorController.addAssignment);
routes.post("/getSubsectionById", auth.auth, auth.isInstructor, instructorController.getSubsectionById);
routes.post("/getAllVideo", auth.auth, auth.isInstructor, instructorController.getAllVideo);
routes.post("/deleteVideo", auth.auth, auth.isInstructor, instructorController.deleteVideo);
routes.get("/getInstructorById", auth.auth, auth.isInstructor, instructorController.getInstructorById);
export default routes;